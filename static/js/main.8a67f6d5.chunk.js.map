{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["AdvanceModal","forwardRef","props","ref","className","pageClassName","pageAttributes","size","overlayColor","backgroundColor","floating","bottom","animation","animationType","children","attributes","forceUpdate","useReducer","x","pagesArr","useRef","useState","isHidden","setHidden","type","setType","current","advanceModal","dataset","removeAttribute","setAttribute","pause","timeout","setTimeout","resume","push","content","options","popLast","React","key","Math","random","styles","length","shift","splice","pop","len","_advanceModal$current","page","classList","add","remove","close","lastChild","hide","show","arg0","useImperativeHandle","useEffect","createPortal","data-animation","data-modal-type","style","display","undefined","background","document","body","modalState","ModalState","advanceModalRef","useModal","_this","transit","getType","_this$advanceModalRef","_this$advanceModalRef2","_this$advanceModalRef3","_this$advanceModalRef4","_this$advanceModalRef5","_this$advanceModalRef6","_this$advanceModalRef7","_this$advanceModalRef8","bindModal","_this$advanceModalRef9","_this$advanceModalRef10","_this$advanceModalRef11","_this$advanceModalRef12","_this$advanceModalRef13","_this$advanceModalRef14","_this$advanceModalRef15","_this$advanceModalRef16","_this$advanceModalRef17","_this$advanceModalRef18","_this$advanceModalRef19","_this$advanceModalRef20","FloatingModalContent","modal","onClick","BottomModalContent","FullPageModalStep1","width","height","FullPageModalStep2","App","modalRef","modalBottomRef","modalFullPageRef","modalBottom","modalFullPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8a67f6d5.chunk.js","sourcesContent":["import React, {\n  useRef,\n  useReducer,\n  useState,\n  useEffect,\n  forwardRef,\n  useImperativeHandle\n} from 'react'\nimport { createPortal } from 'react-dom'\nimport styles from './modal.css'\n\nconst AdvanceModal = forwardRef((props, ref) => {\n  let {\n    className = '', // className for modal container\n    pageClassName = '',\n    pageAttributes = {},\n    size = 999, // the number of pages to preserve in the stack before start dropping out old pages\n    overlayColor, // default #00000099, also it can be set by css variable --modal-color-overlay\n    backgroundColor, // default 'white', also it can be set by css variable --modal-color-bg\n    floating,\n    bottom,\n    animation: animationType = props.bottom\n      ? 'slide-bottom'\n      : props.floating\n      ? 'zoom-in'\n      : 'slide', // choose from [ false | 'slide' | 'slide-bottom' | 'zoom-in' ]\n    children, // if existed, add them as the first page\n    ...attributes // pass the reset to modal container\n  } = props\n  const [, forceUpdate] = useReducer((x) => x + 1, 0)\n  const pagesArr = useRef([]) // useRef instead of useState to have up-to-date value for pages array, and push new pages to the existed array directly\n  const [isHidden, setHidden] = useState(false)\n  const animation = useRef({\n    type: animationType,\n    setType: (type) => {\n      // Internal state\n      animationType = animation.current.type // preserve the old value to use when resume\n      animation.current.type = type // current value\n\n      // HTML element state\n      if (type) {\n        advanceModal.current.dataset.animation = type\n        advanceModal.current.removeAttribute('data-animation-pause')\n      } else {\n        advanceModal.current.setAttribute('data-animation-pause', '')\n      }\n    },\n    pause: (timeout) => {\n      // if timeout is not passed, pause indefinitely\n      animation.current.type = false\n      advanceModal.current.setAttribute('data-animation-pause', '')\n      timeout && setTimeout(animation.current.resume, timeout)\n    },\n    resume: () => {\n      animation.current.type = animationType\n      advanceModal.current.removeAttribute('data-animation-pause')\n    }\n  })\n\n  const advanceModal = useRef(null)\n\n  const push = (content, options = {}) => {\n    const {\n      popLast = false,\n      animation: animationType = animation.current.type\n    } = options\n\n    // pause if the animation is already active, but options.animation is false for this instance\n    if (!animationType && !!animation.current.type) animation.current.pause(250)\n\n    pagesArr.current.push(\n      <div\n        key={Math.random()} // since the key is set only on push, random value should be fine\n        className={styles.page + ' ' + pageClassName}\n        {...pageAttributes}\n      >\n        {content}\n      </div>\n    )\n    forceUpdate()\n\n    if (pagesArr.current.length > size)\n      if (animationType)\n        setTimeout(() => {\n          pagesArr.current.shift()\n          forceUpdate()\n        }, 250)\n      else {\n        pagesArr.current.shift()\n        forceUpdate()\n      }\n\n    if (popLast && pagesArr.current.length > 1)\n      if (animationType)\n        setTimeout(() => {\n          pagesArr.current.splice(pagesArr.current.length - 2, 1) // remove before last page\n          forceUpdate()\n        }, 250)\n      else {\n        pagesArr.current.splice(pagesArr.current.length - 2, 1) // remove before last page\n        forceUpdate()\n      }\n  }\n\n  const pop = (options = {}) => {\n    const { animation: animationType = animation.current.type } = options\n\n    if (!animationType) {\n      pagesArr.current.pop()\n      if (animation.current.type) animation.current.pause(250) // pause if animation is already active\n      forceUpdate()\n      return\n    }\n\n    /* transition */\n    const len = advanceModal.current.children?.length\n    // select the page before last one (or last in case of one page)\n    const page = advanceModal.current.children[len > 1 ? len - 2 : 0]\n    page.classList.add(styles['--back-transition'])\n    setTimeout(() => {\n      page.classList.remove(styles['--back-transition'])\n      pagesArr.current.pop()\n      forceUpdate()\n    }, 250)\n\n    // if last page, animate overlay hiding\n    if (pagesArr.current.length <= 1) {\n      page && advanceModal.current.classList.add(styles['--out-transition'])\n      setTimeout(() => {\n        page && advanceModal.current.classList.remove(styles['--out-transition'])\n      }, 250)\n    }\n  }\n\n  const close = (options = {}) => {\n    const { animation: animationType = animation.current.type } = options\n\n    if (!animationType) {\n      pagesArr.current.splice(0, pagesArr.current.length) // empty array while keeping reference\n      if (animation.current.type) animation.current.pause(250) // pause if animation is already active\n      forceUpdate()\n      return\n    }\n\n    /* transition */\n    const page = advanceModal.current.lastChild\n    page?.classList.add(styles['--back-transition'])\n    page && advanceModal.current.classList.add(styles['--out-transition'])\n    setTimeout(() => {\n      page?.classList.remove(styles['--back-transition'])\n      page && advanceModal.current.classList.remove(styles['--out-transition'])\n      pagesArr.current.splice(0, pagesArr.current.length)\n      forceUpdate()\n    }, 250)\n  }\n\n  const hide = (options = {}) => {\n    const { animation: animationType = animation.current.type } = options\n\n    if (!animationType) {\n      if (animation.current.type) animation.current.pause(250) // pause if animation is already active\n      setHidden(true)\n      return\n    }\n\n    /* transition */\n    const page = advanceModal.current.lastChild\n    page?.classList.add(styles['--back-transition'])\n    page && advanceModal.current.classList.add(styles['--out-transition'])\n    setTimeout(() => {\n      page?.classList.remove(styles['--back-transition'])\n      page && advanceModal.current.classList.remove(styles['--out-transition'])\n      setHidden(true)\n    }, 250)\n  }\n\n  /**\n   * @param {*} arg0 either React Component to show, ie. push into the stack or options object\n   * @param {*} options if arg0 was a React Component then this parameter is options object, otherwise ignore\n   */\n  const show = (arg0, options = {}) => {\n    let { animation: animationType = animation.current.type } = options\n\n    // the case where arg0 is option and only need to show the hidden pages\n    if (arg0 && arg0.animation) {\n      animationType = arg0.animation\n\n      // pause if the animation is already active, but options.animation is false for this instance\n      if (!animationType && !!animation.current.type)\n        animation.current.pause(250)\n    }\n\n    // the case where arg0 is React Component, then push it into stack and pass option object\n    if (arg0 && !arg0.animation) push(arg0, options)\n\n    setHidden(false)\n  }\n\n  useImperativeHandle(ref, () => ({ push, pop, close, hide, show, animation }))\n\n  useEffect(() => {\n    if (children) push(children)\n  }, [])\n\n  return createPortal(\n    <div\n      className={styles.container + ' ' + className}\n      data-animation={animationType}\n      data-modal-type={\n        (floating ? 'floating' : 'full') + (bottom ? ' bottom' : '')\n      }\n      ref={advanceModal}\n      style={{\n        display: !pagesArr.current.length || isHidden ? 'none' : undefined,\n        '--modal-color-overlay': overlayColor || undefined,\n        '--modal-color-bg': backgroundColor || undefined,\n        background:\n          pagesArr.current.length > 1 && !floating\n            ? 'var(--modal-color-bg)'\n            : undefined\n      }}\n      {...attributes}\n    >\n      {pagesArr.current}\n    </div>,\n    document.body\n  )\n})\n\nexport default AdvanceModal\n\nclass ModalState {\n  advanceModalRef = {}\n\n  /**\n   * Get the functions of an already bound modal instance, given its key.\n   * If a key isn't passed, its value would be 'default'.\n   *\n   * @param {string} [key]\n   * @returns modal object with { push, pop, close, hide, show } functions\n   */\n  useModal = (key = 'default') => {\n    return {\n      push: (content, options) => this.push(key, content, options),\n      pop: (options) => this.pop(key, options),\n      close: (options) => this.close(key, options),\n      transit: (content, options) => this.transit(key, content, options),\n      hide: (options) => this.hide(key, options),\n      show: (content, options) => this.show(key, content, options),\n      animation: {\n        getType: () =>\n          this.advanceModalRef[key]?.current?.animation.current.type,\n        setType: (type) =>\n          this.advanceModalRef[key]?.current?.animation.current.setType(type),\n        pause: (timeout) =>\n          this.advanceModalRef[key]?.current?.animation.current.pause(timeout),\n        resume: () =>\n          this.advanceModalRef[key]?.current?.animation.current.resume()\n      }\n    }\n\n    // We could here simply do `return this.advanceModalRef[key]?.current` and then all functionalities will be exposed.\n    // However, at the start, ref is null and `this.advanceModalRef[key]?.current` is resolved to undefined.\n    // Hence, when ref value is changed to an HTMLElement after the first render, there is no way .\n    // That is way useRef() hook returns {current: VALUE} object such that \"ref.current\" refers to a mutable VALUE.\n    // By using function closure, `this.advanceModalRef[key]?.current` is resolved when each of these function is called.\n  }\n\n  /**\n   * Bind a AdvanceModal instance given its ref, with a given key.\n   * If a key isn't passed, its value would be 'default'.\n   *\n   * Although the HTMLElement of the modal is located at the bottom of the <body> tag,\n   * it inherits the context from the component in which it's declared.\n   *\n   * @param {React.MutableRefObject<HTMLElement>} ref react ref object for AdvanceModal instance.\n   * @param {string} key\n   * @returns modal object with { push, pop, close, hide, show } functions\n   */\n  bindModal = (ref, key = 'default') => {\n    this.advanceModalRef[key] = ref\n    return this.useModal(key)\n  }\n\n  push = (key, content, options) =>\n    this.advanceModalRef[key]?.current?.push(content, options)\n\n  pop = (key, options) => this.advanceModalRef[key]?.current?.pop(options)\n  close = (key, options) => this.advanceModalRef[key]?.current?.close(options)\n  transit = (key, content, options) =>\n    this.advanceModalRef[key]?.current?.push(content, {\n      popLast: true,\n      ...options\n    })\n\n  hide = (key, options) => this.advanceModalRef[key]?.current?.hide(options)\n  show = (key, content, options) =>\n    this.advanceModalRef[key]?.current?.show(content, options)\n}\n\nconst modalState = new ModalState()\n\nexport const { useModal, bindModal } = modalState\n","import React, { useRef } from 'react'\n\nimport Modal, { bindModal, useModal } from 'react-advance-modal'\nimport 'react-advance-modal/dist/index.css'\n\nconst App = () => {\n  const modalRef = useRef(null)\n  const modalBottomRef = useRef(null)\n  const modalFullPageRef = useRef(null)\n\n  const modal = bindModal(modalRef)\n  const modalBottom = bindModal(modalBottomRef, 'bottom')\n  const modalFullPage = bindModal(modalFullPageRef, 'full-page')\n\n  return (\n    <>\n      <h1> Welcome to React Advance Modal </h1>\n      <button onClick={() => modal.show(<FloatingModalContent />)}>\n        Show floating modal\n      </button>\n      <button onClick={() => modalBottom.show(<BottomModalContent />)}>\n        Show floating bottom modal\n      </button>\n      <button onClick={() => modalFullPage.push(<FullPageModalStep1 />)}>\n        Show full page modal\n      </button>\n\n      <Modal ref={modalRef} floating />\n      <Modal ref={modalBottomRef} floating bottom />\n      <Modal ref={modalFullPageRef} />\n    </>\n  )\n}\n\nconst FloatingModalContent = () => {\n  const modal = useModal()\n\n  return (\n    <div>\n      <h1> Floating Modal Content </h1>\n      <p>\n        Lorem ipsum dolor sit amet, ea vix essent diceret, vidit abhorreant sed\n        at, duo consul numquam at.\n      </p>\n      <button onClick={modal.pop}> Close </button>\n    </div>\n  )\n}\n\nconst BottomModalContent = () => {\n  const modal = useModal('bottom')\n\n  return (\n    <div>\n      <h1> Floating Modal Content </h1>\n      <p>\n        Lorem ipsum dolor sit amet, ea vix essent diceret, vidit abhorreant sed\n        at, duo consul numquam at.\n      </p>\n      <button onClick={modal.pop}> Close </button>\n    </div>\n  )\n}\n\nconst FullPageModalStep1 = () => {\n  const modal = useModal('full-page')\n\n  return (\n    <div style={{ backgroundColor: '#6d9ce8', width: '100%', height: '100%' }}>\n      <h2> Full Page Modal Content Step 1 </h2>\n      <h3> What is Lorem Ipsum? </h3>\n      <p>\n        Lorem Ipsum is simply dummy text of the printing and typesetting\n        industry. Lorem Ipsum has been the industry's standard dummy text ever\n        since the 1500s, when an unknown printer took a galley of type and\n        scrambled it to make a type specimen book. It has survived not only five\n        centuries, but also the leap into electronic typesetting, remaining\n        essentially unchanged. It was popularised in the 1960s with the release\n        of Letraset sheets containing Lorem Ipsum passages, and more recently\n        with desktop publishing software like Aldus PageMaker including versions\n        of Lorem Ipsum.\n      </p>\n      <button onClick={() => modal.push(<FullPageModalStep2 />)}>\n        Got to step 2\n      </button>\n      <button onClick={modal.pop}> Close </button>\n    </div>\n  )\n}\n\nconst FullPageModalStep2 = () => {\n  const modal = useModal('full-page')\n\n  return (\n    <div style={{ backgroundColor: '#5dc294' }}>\n      <h2> Full Page Modal Content Step 2 </h2>\n      <h3> Why do we use it? </h3>\n      <p>\n        It is a long established fact that a reader will be distracted by the\n        readable content of a page when looking at its layout. The point of\n        using Lorem Ipsum is that it has a more-or-less normal distribution of\n        letters, as opposed to using 'Content here, content here', making it\n        look like readable English. Many desktop publishing packages and web\n        page editors now use Lorem Ipsum as their default model text, and a\n        search for 'lorem ipsum' will uncover many web sites still in their\n        infancy. Various versions have evolved over the years, sometimes by\n        accident, sometimes on purpose (injected humour and the like).\n      </p>\n      <button\n        onClick={() =>\n          modal.push(\n            <>\n              <div> Last step! </div>\n              <button onClick={modal.pop}> Back </button>\n              <button onClick={modal.close}> Close </button>\n            </>\n          )\n        }\n      >\n        Got to last\n      </button>\n      <button onClick={modal.pop}> Back </button>\n      <button onClick={modal.close}> Close </button>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}